name: Build container image and deploy on dockerhub
on:
  push:
    tags: '*'
    branches-ignore:
      - 'autodelivery**'
      - 'bump-**'
      - 'renovate/**'
  pull_request:

jobs:
  Build-And-Deploy-Container:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Fetch tags
        shell: bash
        run: git fetch --tags -f
      - name: Compute name
        env:
          SLUG: ${{ github.repository }}
        run: |
          IMAGE_NAME="$(echo $SLUG | tr '[:upper:]' '[:lower:]')"
          echo IMAGE_NAME="$IMAGE_NAME"
          echo IMAGE_NAME="$IMAGE_NAME" >> $GITHUB_ENV
      - name: Build Image
        run: |
          echo docker build -t "$IMAGE_NAME:latest" -t "$IMAGE_NAME:$(git rev-list --all --count).$(date +%Y%m%d.%H%M)" .
          docker build -t "$IMAGE_NAME:latest" -t "$IMAGE_NAME:$(git rev-list --all --count).$(date +%Y%m%d.%H%M)" .
      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: danysk
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin docker.io
      - name: Deploy Image
        if: ${{ github.event_name != 'pull_request' }}
        run: docker push --all-tags $IMAGE_NAME
  success:
    runs-on: ubuntu-22.04
    needs:
      - Build-And-Deploy-Container
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
